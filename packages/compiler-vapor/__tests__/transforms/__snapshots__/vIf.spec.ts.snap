// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compiler: v-if > basic v-if 1`] = `
"import { renderEffect as _renderEffect, setText as _setText, createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")

export function render(_ctx) {
  const n1 = _createIf(() => (_ctx.ok), () => {
    const n3 = t0()
    _renderEffect(() => _setText(n3, _ctx.msg))
    return n3
  })
  return n1
}"
`;

exports[`compiler: v-if > comment between branches 1`] = `
"import { createIf as _createIf, renderEffect as _renderEffect, setText as _setText, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")
const t1 = _template("<!--foo-->")
const t2 = _template("<p></p>")
const t3 = _template("<!--bar-->")
const t4 = _template("fine")
const t5 = _template("<input>")

export function render(_ctx) {
  const n14 = t5()
  const n1 = _createIf(() => (_ctx.ok), () => {
    const n3 = t0()
    return n3
  }, () => _createIf(() => (_ctx.orNot), () => {
    const n6 = t1()
    const n7 = t2()
    return [n6, n7]
  }, () => {
    const n11 = t3()
    const n12 = t4()
    return [n11, n12]
  }))
  _renderEffect(() => _setText(n14, _ctx.text))
  return [n1, n14]
}"
`;

exports[`compiler: v-if > dedupe same template 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div>hello</div>")

export function render(_ctx) {
  const n1 = _createIf(() => (_ctx.ok), () => {
    const n3 = t0()
    return n3
  })
  const n4 = _createIf(() => (_ctx.ok), () => {
    const n6 = t0()
    return n6
  })
  return [n1, n4]
}"
`;

exports[`compiler: v-if > template v-if 1`] = `
"import { renderEffect as _renderEffect, setText as _setText, createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")
const t1 = _template("hello")
const t2 = _template("<p></p>")

export function render(_ctx) {
  const n1 = _createIf(() => (_ctx.ok), () => {
    const n3 = t0()
    const n4 = t1()
    const n5 = t2()
    _renderEffect(() => _setText(n5, _ctx.msg))
    return [n3, n4, n5]
  })
  return n1
}"
`;

exports[`compiler: v-if > v-if + v-else 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")
const t1 = _template("<p></p>")

export function render(_ctx) {
  const n1 = _createIf(() => (_ctx.ok), () => {
    const n3 = t0()
    return n3
  }, () => {
    const n5 = t1()
    return n5
  })
  return n1
}"
`;

exports[`compiler: v-if > v-if + v-else-if + v-else 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")
const t1 = _template("<p></p>")
const t2 = _template("fine")

export function render(_ctx) {
  const n1 = _createIf(() => (_ctx.ok), () => {
    const n3 = t0()
    return n3
  }, () => _createIf(() => (_ctx.orNot), () => {
    const n5 = t1()
    return n5
  }, () => {
    const n8 = t2()
    return n8
  }))
  return n1
}"
`;

exports[`compiler: v-if > v-if + v-else-if 1`] = `
"import { createIf as _createIf, template as _template } from 'vue/vapor';
const t0 = _template("<div></div>")
const t1 = _template("<p></p>")

export function render(_ctx) {
  const n1 = _createIf(() => (_ctx.ok), () => {
    const n3 = t0()
    return n3
  }, () => _createIf(() => (_ctx.orNot), () => {
    const n5 = t1()
    return n5
  }))
  return n1
}"
`;
