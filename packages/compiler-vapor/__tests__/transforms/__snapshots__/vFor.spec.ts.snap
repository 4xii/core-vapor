// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compiler: v-for > basic v-for 1`] = `
"import { template as _template, fragment as _fragment, renderEffect as _renderEffect, children as _children, on as _on, setText as _setText, createFor as _createFor, append as _append } from 'vue/vapor';

export function render(_ctx) {
  const t0 = _template("<div></div>")
  const t1 = _fragment()
  const n0 = t1()
  const n1 = _createFor(() => (_ctx.items), (_block) => {
    let item
    _renderEffect(() => {
      ([item] = _block.s);
    })
    const n2 = t0()
    const { 0: [n3],} = _children(n2)
    _on(n3, "click", $event => (_ctx.remove(item)))
    _renderEffect(() => {
      _setText(n3, item)
    })
    return n2
  })
  _append(n0, n1)
  return n0
}"
`;

exports[`compiler: v-for > no value 1`] = `
"import { template as _template, fragment as _fragment, createFor as _createFor, append as _append } from 'vue/vapor';

export function render(_ctx) {
  const t0 = _template("<div>item</div>")
  const t1 = _fragment()
  const n0 = t1()
  const n1 = _createFor(() => (_ctx.items), (_block) => {
    const n2 = t0()
    return n2
  })
  _append(n0, n1)
  return n0
}"
`;

exports[`compiler: v-for > object de-structured value 1`] = `
"import { template as _template, fragment as _fragment, renderEffect as _renderEffect, children as _children, createTextNode as _createTextNode, append as _append, setText as _setText, createFor as _createFor } from 'vue/vapor';

export function render(_ctx) {
  const t0 = _template("<span></span>")
  const t1 = _fragment()
  const n0 = t1()
  const n1 = _createFor(() => (_ctx.items), (_block) => {
    let id, value
    _renderEffect(() => {
      ([{ id, value }] = _block.s);
    })
    const n2 = t0()
    const { 0: [n5],} = _children(n2)
    const n3 = _createTextNode()
    const n4 = _createTextNode()
    _append(n5, n3, n4)
    _renderEffect(() => {
      _setText(n3, id)
    })
    _renderEffect(() => {
      _setText(n4, value)
    })
    return n2
  })
  _append(n0, n1)
  return n0
}"
`;
