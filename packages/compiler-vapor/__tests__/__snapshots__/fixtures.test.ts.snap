// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fixtures 1`] = `
"import { defineComponent as _defineComponent } from 'vue'
import { watchEffect } from 'vue'
import { template, children, insert, setText, on, setHtml } from 'vue/vapor'
const t0 = template(\`<div><h1 id=\\"title\\">Counter</h1><p>Count: </p><p>Double: </p><button>Increment</button><div></div><input type=\\"text\\"><p>once: </p><p>{{ count }}</p></div>\`)
import { ref, computed } from 'vue'

const html = '<b>HTML</b>'

export default /*#__PURE__*/_defineComponent({
  setup(__props) {

const count = ref(0)
const double = computed(() => count.value * 2)

const increment = () => count.value++


return (() => {
const n8 = t0()
const { 1: [n0], 2: [n2], 3: [n4], 4: [n5], 6: [n6],} = children(n8)
const n1 = document.createTextNode(count.value)
insert(n1, n0)
const n3 = document.createTextNode(double.value)
insert(n3, n2)
const n7 = document.createTextNode(count.value)
insert(n7, n6)
setText(n7, undefined, count.value)
watchEffect(() => {
setText(n1, undefined, count.value)
})
watchEffect(() => {
setText(n3, undefined, double.value)
})
watchEffect(() => {
on(n4, \\"click\\", increment)
})
watchEffect(() => {
setHtml(n5, undefined, html)
})
return n8

})();
}

})"
`;
