// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`comile > bindings 1`] = `
"import { watchEffect } from 'vue';
import { template, children, createTextNode, insert, setText } from 'vue/vapor';
const t0 = template('<div>count is <!>.</div>');
export function render() {
  const n0 = t0();
  const {
    0: [
      n3,
      {
        1: [n2],
      },
    ],
  } = children(n0);
  const n1 = createTextNode(count.value);
  insert(n1, n3, n2);
  watchEffect(() => {
    setText(n1, undefined, count.value);
  });
  return n0;
}
"
`;

exports[`comile > directives > v-bind > simple expression 1`] = `
"import { watchEffect } from 'vue';
import { template, children, setAttr } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  watchEffect(() => {
    setAttr(n1, 'id', undefined, id.value);
  });
  return n0;
}
"
`;

exports[`comile > directives > v-html > no expression 1`] = `
"import { watchEffect } from 'vue';
import { template, children, setHtml } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  watchEffect(() => {
    setHtml(n1, undefined, '');
  });
  return n0;
}
"
`;

exports[`comile > directives > v-html > simple expression 1`] = `
"import { watchEffect } from 'vue';
import { template, children, setHtml } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  watchEffect(() => {
    setHtml(n1, undefined, code.value);
  });
  return n0;
}
"
`;

exports[`comile > directives > v-on > simple expression 1`] = `
"import { watchEffect } from 'vue';
import { template, children, on } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  watchEffect(() => {
    on(n1, 'click', handleClick);
  });
  return n0;
}
"
`;

exports[`comile > directives > v-once > as root node 1`] = `
"import { watchEffect } from 'vue';
import { template, children, setAttr } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  watchEffect(() => {
    setAttr(n1, 'id', undefined, foo);
  });
  return n0;
}
"
`;

exports[`comile > directives > v-once > basic 1`] = `
"import { template, children, createTextNode, setText, setAttr, insert } from 'vue/vapor';
const t0 = template('<div> <span></span></div>');
export function render() {
  const n0 = t0();
  const {
    0: [
      n3,
      {
        2: [n2],
      },
    ],
  } = children(n0);
  const n1 = createTextNode(msg.value);
  setText(n1, undefined, msg.value);
  setAttr(n2, 'class', undefined, clz.value);
  insert(n1, n3, 0 /* InsertPosition.FIRST */);
  return n0;
}
"
`;

exports[`comile > directives > v-text > no expression 1`] = `
"import { watchEffect } from 'vue';
import { template, children, setText } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  watchEffect(() => {
    setText(n1, undefined, '');
  });
  return n0;
}
"
`;

exports[`comile > directives > v-text > simple expression 1`] = `
"import { watchEffect } from 'vue';
import { template, children, setText } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  watchEffect(() => {
    setText(n1, undefined, str.value);
  });
  return n0;
}
"
`;

exports[`comile > dynamic root 1`] = `
"import { watchEffect } from 'vue';
import { fragment, createTextNode, append, setText } from 'vue/vapor';
export function render() {
  const t0 = fragment();
  const n0 = t0();
  const n1 = createTextNode(1);
  const n2 = createTextNode(2);
  append(n0, n1, n2);
  watchEffect(() => {
    setText(n1, undefined, 1);
  });
  watchEffect(() => {
    setText(n2, undefined, 2);
  });
  return n0;
}
"
`;

exports[`comile > fragment 1`] = `
"import { template } from 'vue/vapor';
const t0 = template('<p></p><span></span><div></div>');
export function render() {
  const n0 = t0();
  return n0;
}
"
`;

exports[`comile > static + dynamic root 1`] = `
"import { watchEffect } from 'vue';
import { template, createTextNode, insert, setText } from 'vue/vapor';
const t0 = template('2');
export function render() {
  const n0 = t0();
  const n1 = createTextNode(1);
  const n2 = createTextNode(3);
  insert(n1, n0, 0 /* InsertPosition.FIRST */);
  insert(n2, n0);
  watchEffect(() => {
    setText(n1, undefined, 1);
  });
  watchEffect(() => {
    setText(n2, undefined, 3);
  });
  return n0;
}
"
`;

exports[`comile > static template 1`] = `
"import { template } from 'vue/vapor';
const t0 = template('<div><p>hello</p><input><span></span></div>');
export function render() {
  const n0 = t0();
  return n0;
}
"
`;
